#!/bin/bash

FILENAME="projects.json"
touch $FILENAME

if [ $DRIVER == "projects" ]; then
  echo "Fetching projects in ${BASE_PATH} with projects api for search ${PROJECT_SEARCH_PARAM} and with namespace selector ${PROJECT_SELECTION} "
  RESULT=$(curl -s "${BASE_PATH}api/v4/projects?private_token=${GITLAB_PRIVATE_TOKEN}&search=${PROJECT_SEARCH_PARAM}&per_page=9999")
  echo $RESULT | jq "map(select(.namespace.name == \"${NAMESPACE}\"))" > $FILENAME

elif [ $DRIVER == "groups" ]; then
  if  [[ "$EXTENDEDQUERY" != "null" ]];  then
    echo "extended query set, using it.."
    RESULT=$(curl -s "${BASE_PATH}api/v4/groups/${EXTENDEDQUERY}?private_token=${GITLAB_PRIVATE_TOKEN}&search=${PROJECT_SEARCH_PARAM}${INCLSGP}&per_page=9999")

  elif [[ "$SUBGROUPNAME" != "null" ]];  then
    echo "subgroupname set, using it.."
    RESULT=$(curl -k "${BASE_PATH}api/v4/groups/${GROUPNAME}%2f${SUBGROUPNAME}/projects?private_token=${GITLAB_PRIVATE_TOKEN}&search=${PROJECT_SEARCH_PARAM}${INCLSGP}&per_page=9999")

  elif [[  "$GROUPNAME" != "null" ]];  then
    echo "groupname passed, querying it out"
    RESULT=$(curl -k "${BASE_PATH}api/v4/groups/${GROUPNAME}/projects?private_token=${GITLAB_PRIVATE_TOKEN}&search=${PROJECT_SEARCH_PARAM}${INCLSGP}&per_page=9999")

  else
    echo "Please set the needed group driver variables"
    exit 1
  fi

else
  echo "Please set a valid gitlab api driver, projects or groups"
  exit 1
fi

if [ ! -z "$PROJECT_TAG" ]; then
    echo "filtering all projects on tag: ${PROJECT_TAG}"
    RESULT=$(echo $RESULT | jq --arg PROJECT_TAG "$PROJECT_TAG" '[.[] | select(.tag_list[]==$PROJECT_TAG)]')
fi

echo "{\"projects\":${RESULT}}" > $FILENAME

# keeping this as is.
cat $FILENAME | python3 -c 'import sys, yaml, json; j=json.loads(sys.stdin.read()); print(yaml.safe_dump(j))' > projects.yml